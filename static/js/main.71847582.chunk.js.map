{"version":3,"sources":["Pages/Movies.js","Pages/MoviesAPI.js","components/TrendingMovies.js","components/TopRated.js","Pages/Details.js","Pages/MyFave.js","Pages/HomePage.js","Pages/ToWatch.js","Pages/TvShows.js","components/NavBarPages.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Movies","props","nowPlayArr","this","nowPlay","map","item","key","className","title","id","onClick","getDetails","src","poster_path","Component","MoviesAPI","state","playN","topTv","axios","get","then","res","setState","data","results","console","log","catch","error","href","rel","TrMovies","TopM","topMovies","length","movie","alt","TopRated","TopRatedM","resultTop","Details","onClickADD","e","AddFav","details","onClickWatch","AddWatch","vote_average","overview","release_date","MyFave","favM2","FavM","faveList","clearList","HomePage","result","topDetails","fave","ToWatch","onClickRm","RemWatch","watchList","watch","TvShows","topTvArr","NavBarPages","to","exact","path","component","faves","RemFav","NavBar","App","newFave","nameOfMovie","exist","i","push","newWatch","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71847582.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n  }\n  //\n\n  render() {\n    const nowPlayArr = this.props.nowPlay.map((item, key) => {\n      return (\n        <div>\n          <div className=\"imageTitle\">{item.title} </div>\n          <div key={item.id}>\n            <img\n              className=\"fade-in\"\n              onClick={() => this.props.getDetails(item)}\n              src={`https://image.tmdb.org/t/p/w200/${item.poster_path}`}\n            />\n          </div>\n        </div>\n      );\n    });\n    return <div className=\"flexCont\">{nowPlayArr}</div>;\n  }\n}\nexport default Movies;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Movies from \"../Pages/Movies\";\nimport NavBar from \"../components/NavBar\";\n\nclass MoviesAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { playN: [], topTv: [] };\n  }\n  componentDidMount() {\n    // Play Now Movies\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/movie/now_playing?api_key=901c934e463e9e9fa41c6d7dfac1af2b\"\n      )\n      .then(res => {\n        // // console.log('here is axios',res.data)\n        this.setState({\n          playN: res.data.results\n        });\n        console.log(\"now playing\");\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n    // Top Rated TV\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/tv/top_rated?api_key=901c934e463e9e9fa41c6d7dfac1af2b\"\n      )\n      .then(res => {\n        this.setState({\n          topTv: res.data.results\n        });\n        console.log(\"top rated\");\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    console.log(\"render top tv\");\n    return (\n      <div>\n        <Movies nowPlay={this.state.playN} />\n        <NavBar topTv={this.state.topTv} />\n\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Staatliches&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default MoviesAPI;\n","import React, { Component } from \"react\";\n\nclass TrMovies extends Component {\n  render() {\n    let TopM;\n    if (this.props.topMovies) {\n      if (this.props.topMovies.length > 0) {\n        TopM = this.props.topMovies.map(movie => {\n          return (\n            <div className=\".container\" key={movie.id}>\n              <img\n                className=\"fade-in\"\n                alt=\"MoviePoster\"\n                onClick={() => this.props.getDetails(movie)}\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              />\n              <div className=\"container\"></div>\n            </div>\n          );\n        });\n      } else {\n        TopM = <h1>Loading...</h1>;\n      }\n    }\n    return (\n      <div>\n        <div>\n          <h1 className=\"fade-in\">Trending Movie This Week </h1>\n        </div>\n        <div className=\"flexCont\">{TopM}</div>\n      </div>\n    );\n  }\n}\n\nexport default TrMovies;\n","import React, { Component } from \"react\";\n\n// import HomePage from \"../Pages/HomePage\";\n\nclass TopRated extends Component {\n  render() {\n    // console.log(this.props.resultTop, \"top movies\");\n    let TopRatedM;\n    if (this.props.resultTop) {\n      if (this.props.resultTop.length > 0) {\n        TopRatedM = this.props.resultTop.map(movie => {\n          return (\n            <div key={movie.id}>\n              <img\n                className=\"fade-in\"\n                onClick={() => this.props.getDetails(movie)}\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              />\n            </div>\n          );\n        });\n      } else {\n        TopRatedM = <h1>Loading...</h1>;\n      }\n    }\n    return (\n      <div>\n        <h1 className=\"fade-in\">Top Movies </h1>\n        <div className=\"flexCont\">{TopRatedM}</div>\n      </div>\n    );\n  }\n}\nexport default TopRated;\n","import React, { Component } from \"react\";\n\nclass Details extends Component {\n  onClickADD = e => {\n    this.props.AddFav(this.props.details);\n  };\n  onClickWatch = e => {\n    this.props.AddWatch(this.props.details);\n  };\n\n  render() {\n    return (\n      <div className=\"details\">\n        <div className=\"movieTitle\">\n          <h1>{this.props.details.title}</h1>\n          <button onClick={this.onClickADD}>ADD TO FAV</button>\n          <button onClick={this.onClick}>ADD TO WATCH</button>\n        </div>\n        {this.props.details.vote_average\n          ? ` Vote ${this.props.details.vote_average} `\n          : null}\n        <p>{this.props.details.overview}</p>\n\n        <h3>\n          {this.props.details.release_date\n            ? ` Date ${this.props.details.release_date}`\n            : null}\n        </h3>\n        <img\n          className=\"detail-img\"\n          alt={this.props.details.title}\n          src={`https://image.tmdb.org/t/p/w200/${this.props.details.poster_path}`}\n        ></img>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React, { Component } from \"react\";\nimport HomePage from \"../Pages/HomePage\";\nimport Details from \"../Pages/Details\";\nclass MyFave extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favM2: [],\n      details: null\n    };\n  }\n  // get movie detail\n  getDetails = e => {\n    this.setState({\n      details: e // passing state to children\n    });\n  };\n  render() {\n    let FavM = <h1>You have NOTHING here :)...</h1>;\n    // Chick if array has date\n    if (this.props.faveList) {\n      if (this.props.faveList.length > 0) {\n        // if array has items it will do the map function\n        FavM = this.props.faveList.map(movie => {\n          return (\n            <div key={movie.id}>\n              <div className=\"imageTitle\">{movie.title}</div>\n              <img\n                onClick={() => this.getDetails(movie)}\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              />\n              <button onClick={this.onClick}>REMOVE</button>\n              {/* font link */}\n              <link\n                href=\"https://fonts.googleapis.com/css?family=Staatliches&display=swap\"\n                rel=\"stylesheet\"\n              />\n            </div>\n          );\n        });\n      } else {\n        FavM = <h1>You have NOTHING here :)...</h1>;\n      }\n    }\n    // Hiding unused Components\n    let details = null;\n    if (this.state.details) {\n      details = (\n        <Details details={this.state.details} AddFav={this.props.AddFav} />\n      );\n    }\n    return (\n      <div>\n        <h1>YOUR LIST</h1>\n        <div className=\"flexCont\">{FavM}</div>\n        {details}\n        <div className=\"buttCont\">\n          <button onClick={() => this.props.clearList(details)}>\n            CLEAR LIST\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyFave;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport TrMovies from \"../components/TrendingMovies\";\nimport TopRated from \"../components/TopRated\";\nimport Details from \"./Details\";\nimport MyFave from \"./MyFave\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { result: [], details: \"\" };\n  }\n  componentDidMount() {\n    // Trending Movies\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/trending/movie/day?api_key=901c934e463e9e9fa41c6d7dfac1af2b\"\n      )\n      .then(res => {\n        this.setState({ result: res.data.results });\n        console.log(\"1111111111111111111111111111111111111\", this.state.result);\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n    // Top Rated Movies\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/movie/top_rated?api_key=901c934e463e9e9fa41c6d7dfac1af2b\"\n      )\n      .then(res => {\n        console.log(\"top rated\", res.data);\n        this.setState({\n          resultTop: res.data.results,\n          topDetails: res.data.results.overview\n        });\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  // Get movie details\n  getDetails = e => {\n    console.log(\"getDetails\", e);\n    this.setState({\n      details: e // passing state to children\n    });\n    // document.querySelector(\n    //   \".details\"\n    // ).style.backgroundImage = `https://image.tmdb.org/t/p/w200/${this.props.details.poster_path}`;\n  };\n\n  render() {\n    // to hide unused components in Home page\n    let details = null;\n    let faveDetails = null;\n    if (this.state.details) {\n      details = (\n        <div>\n          <Details details={this.state.details} AddFav={this.props.AddFav} />;\n        </div>\n      );\n    }\n    if (this.state.fave) {\n      faveDetails = <MyFave getDetails={this.getDetails} />;\n      console.log(\"Woorks\");\n    }\n    return (\n      <div>\n        <TrMovies topMovies={this.state.result} getDetails={this.getDetails} />\n        <TopRated\n          getDetails={this.getDetails}\n          resultTop={this.state.resultTop}\n        />\n        {details}\n      </div>\n    );\n  }\n}\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport HomePage from \"../Pages/HomePage\";\nimport Details from \"../Pages/Details\";\n// IAM STILL WORKING ON THIS PAGE\nclass ToWatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      watchList: [],\n      details: null\n    };\n  }\n\n  onClickRm = e => {\n    this.props.RemWatch(this.props.details);\n  };\n  getDetails = e => {\n    this.setState({\n      details: e // passing state to children\n    });\n  };\n  render() {\n    let watch = <h1>You have nothing here :)...</h1>;\n\n    if (this.props.watchList) {\n      if (this.props.watchList.length > 0) {\n        watch = this.props.watchList.map(movie => {\n          return (\n            <div key={movie.id}>\n              <div className=\"imageTitle\">{movie.title}</div>\n              <img\n                onClick={() => this.getDetails(movie)}\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              />\n\n              <link\n                href=\"https://fonts.googleapis.com/css?family=Staatliches&display=swap\"\n                rel=\"stylesheet\"\n              />\n            </div>\n          );\n        });\n      } else {\n        watch = <h1>You have NOTHING here :)...</h1>;\n      }\n    }\n\n    let details = null;\n    if (this.state.details) {\n      details = (\n        <Details details={this.state.details} AddFav={this.props.AddWatch} />\n      );\n    }\n    return (\n      <div>\n        <h1>You ara planing to watch :</h1>\n        <div className=\"flexCont\">{watch}</div>\n        {details}\n        <button onClick={() => this.props.clearList()}>CLEAR LIST</button>\n      </div>\n    );\n  }\n}\n\nexport default ToWatch;\n","import React, { Component } from \"react\";\n\nclass TvShows extends Component {\n  constructor(props) {\n    super(props);\n  }\n  //\n\n  render() {\n    let topTvArr = null;\n    if (topTvArr) {\n      topTvArr = this.props.topTv.map((item, key) => {\n        return (\n          <div>\n            <div className=\"imageTitle\">{item.title} </div>\n            <div key={item.id}>\n              <img\n                className=\"fade-in\"\n                onClick={() => this.props.getDetails(item)}\n                src={`https://image.tmdb.org/t/p/w200/${item.poster_path}`}\n              />\n            </div>\n          </div>\n        );\n      });\n    }\n    return <div className=\"flexCont\">{topTvArr}</div>;\n  }\n}\nexport default TvShows;\n","import React from \"react\";\nimport MoviesAPI from \"../Pages/MoviesAPI\";\nimport ToWatch from \"../Pages/ToWatch\";\nimport TvShows from \"../Pages/TvShows\";\nimport HomePage from \"../Pages/HomePage\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport MyFave from \"../Pages/MyFave\";\nimport Details from \"../Pages/Details\";\n\nconst NavBarPages = props => {\n  return (\n    <Router>\n      <nav className=\"fade-in\">\n        <Link to=\"/\" className=\"fade-in\">\n          Home\n        </Link>\n        <Link to=\"/movies\" className=\"fade-in\">\n          Movies\n        </Link>\n        <Link to=\"/tvshows\" className=\"fade-in\">\n          Tv Shows\n        </Link>\n        <Link to=\"/towatch\" className=\"fade-in\">\n          To Watch\n        </Link>\n        <Link to=\"/myfave\" className=\"fade-in\">\n          My Favorite\n        </Link>\n      </nav>\n      <div>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => <HomePage AddFav={props.AddFav} />}\n          />\n          <Route path=\"/movies\" component={MoviesAPI} />\n          <Route\n            path=\"/tvshows\"\n            component={() => <TvShows topTv={props.topTv} />}\n          />\n          <Route path=\"/towatch\" component={ToWatch} />\n          <Route\n            path=\"/myfave\"\n            component={() => (\n              <MyFave\n                faveList={props.faves}\n                clearList={props.clearList}\n                onClickRm={props.onClickRm}\n              />\n            )}\n          />\n          <Route\n            path=\"/details\"\n            component={() => (\n              <Details\n                AddFav={props.AddFav}\n                RemFav={this.RemFav}\n                AddWatch={props.AddWatch}\n                watch={props.watch}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\nexport default NavBarPages;\n","import React from \"react\";\nimport NavBarPages from \"./NavBarPages\";\n\nconst NavBar = props => {\n  return (\n    <div className=\"NavBarPages\">\n      <NavBarPages\n        AddFav={props.AddFav}\n        AddWatch={props.AddWatch}\n        // topTv={this.props.topTv}\n        onClickRm={props.onClickRm}\n        faves={props.faves}\n        watch={props.watch}\n        clearList={props.clearList}\n      />\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      faves: [],\n      watch: []\n    };\n  }\n  // ADD TO FAV LIST\n  AddFav = movie => {\n    const newFave = [...this.state.faves];\n    const nameOfMovie = movie.id;\n    let exist = false;\n\n    if (newFave.length != 0) {\n      for (let i = 0; i < newFave.length; i++) {\n        if (newFave[i].id == nameOfMovie) exist = true;\n      }\n    }\n    /// Chick if item is exist\n    if (exist == false) {\n      console.log(\"Movie is already there \");\n      /// if not it will update the stat with new item\n      newFave.push(movie);\n      this.setState({\n        faves: newFave\n      });\n    }\n  };\n  /// ADD TO WATCHLIST ( still working on it )\n  AddWatch = movie => {\n    const newWatch = [...this.state.faves];\n    const nameOfMovie = movie.id;\n    let exist = false;\n    if (newWatch.length != 0) {\n      for (let i = 0; i < newWatch.length; i++) {\n        if (newWatch[i].id == nameOfMovie) exist = true;\n      }\n    }\n    if (exist == false) {\n      console.log(\"IFFF\");\n\n      newWatch.push(movie);\n      this.setState({\n        watch: newWatch\n      });\n    }\n  };\n  /// Clear fave\n  clearList = e => {\n    this.setState({\n      faves: []\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar\n          AddFav={this.AddFav}\n          AddWatch={this.AddWatch}\n          faves={this.state.faves}\n          watch={this.state.watch}\n          onClickRm={this.onClickRm}\n          clearList={this.clearList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}