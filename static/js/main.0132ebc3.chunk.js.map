{"version":3,"sources":["Pages/Details.js","Pages/Movies.js","Pages/MoviesAPI.js","components/TrendingMovies.js","components/TopRated.js","Pages/MyFave.js","Pages/HomePage.js","Pages/ToWatch.js","Pages/TvShows.js","components/NavBarPages.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Details","onClickADD","e","props","AddFav","details","onClickWatch","AddWatch","className","this","title","onClick","vote_average","overview","release_date","alt","src","poster_path","Component","Movies","showDet","de","setState","isShow","item","state","console","log","nowPlayArr","nowPlay","map","key","id","MoviesAPI","playN","topTv","axios","get","then","res","data","results","catch","error","href","rel","TrMovies","TopM","topMovies","length","movie","getDetails","TopRated","TopRatedM","resultTop","MyFave","favM2","FavM","faveList","clearList","HomePage","result","topDetails","fave","ToWatch","watchList","watch","RemWatch","TvShows","topTvArr","NavBarPages","to","exact","path","component","faves","onClickRm","RemFav","NavBar","App","newFave","nameOfMovie","exist","i","push","newWatch","newFaves","faveID","findIndex","splice","watchID","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0132ebc3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Details extends Component {\n  onClickADD = e => {\n    this.props.AddFav(this.props.details);\n  };\n  onClickWatch = e => {\n    this.props.AddWatch(this.props.details);\n  };\n\n  render() {\n    return (\n      <div className=\"details\">\n        <div className=\"movieTitle\">\n          <h1>{this.props.details.title}</h1>\n          <button onClick={this.onClickADD}>ADD TO FAV</button>\n          <button onClick={this.onClickWatch}>ADD TO WATCH</button>\n        </div>\n        {this.props.details.vote_average\n          ? ` Vote ${this.props.details.vote_average} `\n          : null}\n        <p>{this.props.details.overview}</p>\n\n        <h3>\n          {this.props.details.release_date\n            ? ` Date ${this.props.details.release_date}`\n            : null}\n        </h3>\n        <img\n          className=\"detail-img\"\n          alt={this.props.details.title}\n          src={`https://image.tmdb.org/t/p/w200/${this.props.details.poster_path}`}\n        ></img>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React, { Component } from \"react\";\nimport Details from \"../Pages/Details\";\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShow: false,\n      item: {}\n    };\n  }\n  //\n  showDet = de => {\n    this.setState({\n      isShow: true,\n      item: de\n    });\n  };\n  render() {\n    console.log(\" THIS IS MOVIES RENDER\");\n    const nowPlayArr = this.props.nowPlay.map((item, key) => {\n      return (\n        <div key={item.id}>\n          <div className=\"imageTitle\">{item.title} </div>\n          <div>\n            <img\n              className=\"fade-in\"\n              onClick={() => this.showDet(item)}\n              src={`https://image.tmdb.org/t/p/w200/${item.poster_path}`}\n            />\n          </div>\n        </div>\n      );\n    });\n    return (\n      <div>\n        <div className=\"flexCont\">\n          <h1>TOP MOVIES</h1>\n          {nowPlayArr}\n        </div>\n        <div>{this.state.isShow && <Details details={this.state.item} />}</div>\n      </div>\n    );\n  }\n}\nexport default Movies;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Movies from \"../Pages/Movies\";\nimport NavBar from \"../components/NavBar\";\n\nclass MoviesAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { playN: [], topTv: [] };\n  }\n  componentDidMount() {\n    // Play Now Movies\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/movie/now_playing?api_key=901c934e463e9e9fa41c6d7dfac1af2b\"\n      )\n      .then(res => {\n        // // console.log('here is axios',res.data)\n        this.setState({\n          playN: res.data.results\n        });\n        console.log(\"now playing\");\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n    // Top Rated TV\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/tv/top_rated?api_key=901c934e463e9e9fa41c6d7dfac1af2b\"\n      )\n      .then(res => {\n        this.setState({\n          topTv: res.data.results\n        });\n        console.log(\"top rated\");\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    console.log(\"render top tv\");\n    return (\n      <div>\n        <Movies nowPlay={this.state.playN} />\n        {/* <NavBar topTv={this.state.topTv} /> */}\n\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Staatliches&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default MoviesAPI;\n","import React, { Component } from \"react\";\n\nclass TrMovies extends Component {\n  render() {\n    let TopM;\n    if (this.props.topMovies) {\n      if (this.props.topMovies.length > 0) {\n        TopM = this.props.topMovies.map(movie => {\n          return (\n            <div className=\".container\" key={movie.id}>\n              <img\n                className=\"fade-in\"\n                alt=\"MoviePoster\"\n                onClick={() => this.props.getDetails(movie)}\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              />\n              <div className=\"container\"></div>\n            </div>\n          );\n        });\n      } else {\n        TopM = <h1>Loading...</h1>;\n      }\n    }\n    return (\n      <div>\n        <div>\n          <h1 className=\"fade-in\">Trending Movie This Week </h1>\n        </div>\n        <div className=\"flexCont\">{TopM}</div>\n      </div>\n    );\n  }\n}\n\nexport default TrMovies;\n","import React, { Component } from \"react\";\n\n// import HomePage from \"../Pages/HomePage\";\n\nclass TopRated extends Component {\n  render() {\n    // console.log(this.props.resultTop, \"top movies\");\n    let TopRatedM;\n    if (this.props.resultTop) {\n      if (this.props.resultTop.length > 0) {\n        TopRatedM = this.props.resultTop.map(movie => {\n          return (\n            <div key={movie.id}>\n              <img\n                className=\"fade-in\"\n                onClick={() => this.props.getDetails(movie)}\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              />\n            </div>\n          );\n        });\n      } else {\n        TopRatedM = <h1>Loading...</h1>;\n      }\n    }\n    return (\n      <div>\n        <h1 className=\"fade-in\">Top Movies </h1>\n        <div className=\"flexCont\">{TopRatedM}</div>\n      </div>\n    );\n  }\n}\nexport default TopRated;\n","import React, { Component } from \"react\";\nimport HomePage from \"../Pages/HomePage\";\nimport Details from \"../Pages/Details\";\nclass MyFave extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favM2: [],\n      details: null\n    };\n  }\n  // get movie detail\n  getDetails = e => {\n    this.setState({\n      details: e // passing state to children\n    });\n  };\n\n  render() {\n    let FavM = <h1>You have NOTHING here :)...</h1>;\n    // Chick if array has date\n    if (this.props.faveList) {\n      if (this.props.faveList.length > 0) {\n        // if array has items it will do the map function\n        FavM = this.props.faveList.map(movie => {\n          return (\n            <div key={movie.id}>\n              <div className=\"imageTitle\">{movie.title}</div>\n              <img\n                onClick={() => this.getDetails(movie)}\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              />\n              <button onClick={() => this.props.clearList(details)}>\n                REMOVE!\n              </button>\n              {/* font link */}\n              <link\n                href=\"https://fonts.googleapis.com/css?family=Staatliches&display=swap\"\n                rel=\"stylesheet\"\n              />\n            </div>\n          );\n        });\n      } else {\n        FavM = (\n          <div className=\"textAligne\">\n            <h1>You have NOTHING here :)...</h1>\n          </div>\n        );\n      }\n    }\n    // Hiding unused Components\n    let details = null;\n    if (this.state.details) {\n      details = (\n        <Details details={this.state.details} AddFav={this.props.AddFav} />\n      );\n    }\n    return (\n      <div>\n        <h1>YOUR LIST</h1>\n        <div className=\"flexCont\">{FavM}</div>\n        {details}\n        <div className=\"buttCont\">\n          <button onClick={() => this.props.clearList(details)}>\n            CLEAR LIST\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyFave;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport TrMovies from \"../components/TrendingMovies\";\nimport TopRated from \"../components/TopRated\";\nimport Details from \"./Details\";\nimport MyFave from \"./MyFave\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { result: [], details: \"\" };\n  }\n  componentDidMount() {\n    // Trending Movies\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/trending/movie/day?api_key=901c934e463e9e9fa41c6d7dfac1af2b\"\n      )\n      .then(res => {\n        this.setState({ result: res.data.results });\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n    // Top Rated Movies\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/movie/top_rated?api_key=901c934e463e9e9fa41c6d7dfac1af2b\"\n      )\n      .then(res => {\n        this.setState({\n          resultTop: res.data.results,\n          topDetails: res.data.results.overview\n        });\n      })\n\n      .catch(error => {});\n  }\n  // Get movie details\n  getDetails = e => {\n    this.setState({\n      details: e // passing state to children\n    });\n    // document.querySelector(\n    //   \".details\"\n    // ).style.backgroundImage = `https://image.tmdb.org/t/p/w200/${this.props.details.poster_path}`;\n  };\n\n  render() {\n    // to hide unused components in Home page\n    let details = null;\n    let faveDetails = null;\n    if (this.state.details) {\n      details = (\n        <div>\n          <Details\n            details={this.state.details}\n            AddFav={this.props.AddFav}\n            AddWatch={this.props.AddWatch}\n          />\n          ;\n        </div>\n      );\n    }\n    if (this.state.fave) {\n      faveDetails = <MyFave getDetails={this.getDetails} />;\n    }\n    return (\n      <div>\n        <TrMovies topMovies={this.state.result} getDetails={this.getDetails} />\n        <TopRated\n          getDetails={this.getDetails}\n          resultTop={this.state.resultTop}\n        />\n        {details}\n      </div>\n    );\n  }\n}\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport HomePage from \"../Pages/HomePage\";\nimport Details from \"../Pages/Details\";\n// IAM STILL WORKING ON THIS PAGE\nclass ToWatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      watchList: [],\n      details: null\n    };\n  }\n\n  getDetails = e => {\n    this.setState({\n      details: e // passing state to children\n    });\n  };\n  render() {\n    let watch = <h1>You have nothing here :)...</h1>;\n\n    if (this.props.watch) {\n      if (this.props.watch.length > 0) {\n        watch = this.props.watch.map(movie => {\n          return (\n            <div key={movie.id}>\n              <div className=\"imageTitle\">{movie.title}</div>\n              <img\n                onClick={() => this.getDetails(movie)}\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              />\n              <button onClick={() => this.props.RemWatch(movie)}>\n                REMOVE!\n              </button>\n            </div>\n          );\n        });\n      } else {\n        watch = <h1>You have NOTHING here :)...</h1>;\n      }\n    }\n\n    let details = null;\n    if (this.state.details) {\n      details = (\n        <Details details={this.state.details} AddFav={this.props.AddWatch} />\n      );\n    }\n    return (\n      <div>\n        <h1>You ara planing to watch :</h1>\n        <div className=\"flexCont\">{watch}</div>\n        {details}\n        <button onClick={() => this.props.clearList()}>CLEAR LIST</button>\n      </div>\n    );\n  }\n}\n\nexport default ToWatch;\n","import React, { Component } from \"react\";\n\nclass TvShows extends Component {\n  constructor(props) {\n    super(props);\n  }\n  //\n\n  render() {\n    let topTvArr = null;\n    if (topTvArr) {\n      topTvArr = this.props.topTv.map((item, key) => {\n        return (\n          <div>\n            <div className=\"imageTitle\">{item.title} </div>\n            <div key={item.id}>\n              <img\n                className=\"fade-in\"\n                onClick={() => this.props.getDetails(item)}\n                src={`https://image.tmdb.org/t/p/w200/${item.poster_path}`}\n              />\n            </div>\n          </div>\n        );\n      });\n    }\n    return <div className=\"flexCont\">{topTvArr}</div>;\n  }\n}\nexport default TvShows;\n","import React from \"react\";\nimport MoviesAPI from \"../Pages/MoviesAPI\";\nimport ToWatch from \"../Pages/ToWatch\";\nimport TvShows from \"../Pages/TvShows\";\nimport HomePage from \"../Pages/HomePage\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport MyFave from \"../Pages/MyFave\";\nimport Details from \"../Pages/Details\";\n\nconst NavBarPages = props => {\n  return (\n    <Router>\n      <nav className=\"fade-in\">\n        <Link to=\"/\" className=\"fade-in\">\n          Home\n        </Link>\n        <Link to=\"/movies\" className=\"fade-in\">\n          Movies\n        </Link>\n        <Link to=\"/tvshows\" className=\"fade-in\">\n          Tv Shows\n        </Link>\n        <Link to=\"/towatch\" className=\"fade-in\">\n          To Watch\n        </Link>\n        <Link to=\"/myfave\" className=\"fade-in\">\n          My Favorite\n        </Link>\n      </nav>\n      <div>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => (\n              <HomePage AddFav={props.AddFav} AddWatch={props.AddWatch} />\n            )}\n          />\n          <Route path=\"/movies\" component={MoviesAPI} />\n          <Route\n            path=\"/tvshows\"\n            component={() => <TvShows topTv={props.topTv} />}\n          />\n          <Route\n            path=\"/towatch\"\n            component={() => (\n              <ToWatch watch={props.watch} RemWatch={props.RemWatch} />\n            )}\n          />\n          <Route\n            path=\"/myfave\"\n            component={() => (\n              <MyFave\n                faveList={props.faves}\n                clearList={props.clearList}\n                onClickRm={props.onClickRm}\n              />\n            )}\n          />\n          <Route\n            path=\"/details\"\n            component={() => (\n              <Details\n                AddFav={props.AddFav}\n                RemFav={this.RemFav}\n                AddWatch={props.AddWatch}\n                watch={props.watch}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\nexport default NavBarPages;\n","import React from \"react\";\nimport NavBarPages from \"./NavBarPages\";\n\nconst NavBar = props => {\n  return (\n    <div className=\"NavBarPages\">\n      <NavBarPages\n        AddFav={props.AddFav}\n        AddWatch={props.AddWatch}\n        // topTv={this.props.topTv}\n        onClickRm={props.onClickRm}\n        faves={props.faves}\n        watch={props.watch}\n        clearList={props.clearList}\n        RemFav={props.RemFav}\n        RemWatch={props.RemWatch}\n      />\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      faves: [],\n      watch: []\n    };\n  }\n  // ADD TO FAV LIST\n  AddFav = movie => {\n    const newFave = [...this.state.faves];\n    const nameOfMovie = movie.id;\n    let exist = false;\n\n    if (newFave.length != 0) {\n      for (let i = 0; i < newFave.length; i++) {\n        if (newFave[i].id == nameOfMovie) exist = true;\n      }\n    }\n    /// Chick if item is exist\n    if (exist == false) {\n      console.log(\"Movie is already there \");\n      /// if not it will update the stat with new item\n      newFave.push(movie);\n      this.setState({\n        faves: newFave\n      });\n    }\n  };\n  /// ADD TO WATCHLIST ( still working on it )\n  AddWatch = movie => {\n    console.log(\"ANa hna\");\n    const newWatch = [...this.state.watch];\n    const nameOfMovie = movie.id;\n    let exist = false;\n    if (newWatch.length != 0) {\n      for (let i = 0; i < newWatch.length; i++) {\n        if (newWatch[i].id == nameOfMovie) exist = true;\n      }\n    }\n    if (exist == false) {\n      console.log(\"IFFF\");\n\n      newWatch.push(movie);\n      this.setState({\n        watch: newWatch\n      });\n    }\n  };\n  RemFav = movie => {\n    const newFaves = [...this.state.faves];\n    const faveID = newFaves.findIndex(fave => {\n      return fave.id === movie.id;\n    });\n    newFaves.splice(faveID, 1);\n    this.setState({\n      faves: newFaves\n    });\n  };\n  RemWatch = movie => {\n    const newWatch = [...this.state.watch];\n    const watchID = newWatch.findIndex(watch => {\n      return watch.id === movie.id;\n    });\n    newWatch.splice(watchID, 1);\n    this.setState({\n      watch: newWatch\n    });\n  };\n  /// Clear fave\n  clearList = e => {\n    this.setState({\n      faves: []\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar\n          AddFav={this.AddFav}\n          AddWatch={this.AddWatch}\n          faves={this.state.faves}\n          watch={this.state.watch}\n          onClickRm={this.onClickRm}\n          clearList={this.clearList}\n          RemFav={this.RemFav}\n          RemWatch={this.RemWatch}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}